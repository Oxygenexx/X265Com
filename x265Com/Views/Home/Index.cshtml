@{
    ViewBag.Title = "Accueil";
}
<!-- lien vers le contenu CSS de la page Index -->
<head>
    <link rel="stylesheet" type="text/css" href="~/Content/FormulaireStyle4.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/MouseOver.css" />
</head>

<div class="jumbotron">
    <h1>x265Com</h1>
    <p class="lead">x265Com est un encodeur vidéo HEVC</p>
</div>

<div>
    @Html.Partial("_ConversionPartial", new x265Com.Models.ConversionModel())
</div>

@{
    /*
    if (IsPost)
    {

        bool _isWpp = Request.Form["Wppcbox"].AsBool();
        string _InputFilePathAndName = Request.Form["InputFilePathAndName"];
        string _InputFileName = "";
        string _InputFilepath = "";
        //if (string.IsNullOrEmpty(_InputFilePathAndName))
        //{
        int index = _InputFilePathAndName.LastIndexOf(@"\");
        //if (index == 0)
        //  throw new Exception;
        _InputFileName = x265Com.ScriptCS.Tools.GetFileName(_InputFilePathAndName, index);
        _InputFilepath = x265Com.ScriptCS.Tools.GetFilePath(_InputFilePathAndName, index);
        string _OutputFilePathAndName = Request.Form["OutputFilePathAndName"];
        string _OutputFileName = "";
        string _OutputFilepath = "";
        //if (string.IsNullOrEmpty(_InputFilePathAndName))
        //{
        index = _OutputFilePathAndName.LastIndexOf(@"\");
        //if (index == 0)
        //  throw new Exception;
        _OutputFileName = x265Com.ScriptCS.Tools.GetFileName(_OutputFilePathAndName, index);
        _OutputFilepath = x265Com.ScriptCS.Tools.GetFilePath(_OutputFilePathAndName, index);
        //}
        int _cadenceImage = Request.Form["cadenceImage"].AsInt();
        int _defImage = Request.Form["defImage"].AsInt();
        int _perfOption = Request.Form["perfOption"].AsInt();
        x265Com.ScriptCS.ConversionInfo _ConversionInfo = new x265Com.ScriptCS.ConversionInfo()
        {
            InFilePath = _InputFilepath,
            InFileName = _InputFileName,
            OutFilePath = _OutputFilepath,
            OutFileName = _OutputFileName,
            cadenceImage = _cadenceImage,
            DefImage = _defImage,
            perfOption = (x265Com.ScriptCS.ConversionInfo.perfOptionEnum)_perfOption,
            isWpp = _isWpp
        };
        int _exitCode;
        TimeSpan _Elapsed = new TimeSpan();
        string _message;
        bool isSuccess = _ConversionInfo.StartConversion(out _exitCode, out _Elapsed, out _message);
        if (isSuccess)
        {
            <text>
                Conversion OK Time Elapsed : @_Elapsed.Hours:@_Elapsed.Minutes:@_Elapsed.Seconds Message : @_message Exit Code : @_exitCode
            </text>
        }
        else
        {
            <text>
                Conversion KO Message : @_message Exit Code : @_exitCode
            </text>
        }
    }
    */
}

