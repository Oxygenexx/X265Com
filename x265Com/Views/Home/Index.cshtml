@{
    ViewBag.Title = "Home";
}
<!-- Début Region CSS test : je mets le css ici pour l'instant -->

<link rel="stylesheet" type="text/css" href="FormulaireStyle.css">

<style>
    select.test {
        background-color: transparent;
        border-radius: 10px;
    }

    input[type=submit] {
        background-color: #38ADDF;
        border: none;
        color: white;
        padding: 16px 32px;
        text-decoration: none;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 10px;
    }

    input[type="range"] {
        position: relative;
        margin-left: 1em;
    }

        input[type="range"]:after,
        input[type="range"]:before {
            position: absolute;
            top: 1em;
            color: #aaa;
        }

        input[type="range"]:before {
            left: 0em;
            content: attr(min);
        }

        input[type="range"]:after {
            right: 0em;
            content: attr(max);
        }
</style>

<!-- Fin Region CSS test : je mets le css ici pour l'instant -->


<div class="jumbotron">
    <h1>x265Com</h1>
    <p class="lead">x265Com est un encodeur vidéo HEVC</p>
</div>

<!--#region Drop Zone  -->
<style type="text/css">
    #dropZone {
        background: gray;
        border: black dashed 3px;
        width: 200px;
        padding: 50px;
        text-align: center;
        color: white;
    }
</style>
<script type="text/javascript">
    $('#dropZone').filedrop({
        url: '@Url.Action("UploadFiles")',
        paramname: 'files',
        maxFiles: 5,
        dragOver: function () {
            $('#dropZone').css('background', 'blue');
        },
        dragLeave: function () {
            $('#dropZone').css('background', 'gray');
        },
        drop: function () {
            $('#dropZone').css('background', 'gray');
        },
        afterAll: function () {
            $('#dropZone').html('The file(s) have been uploaded successfully!');
        },
        uploadFinished: function (i, file, response, time) {
            $('#uploadResult').append('<li>' + file.name + '</li>');
        }
    });

</script>
<h2>File Drag & Drop Upload Demo</h2>
<div id="dropZone">Drop your files here</div>
<br />
Uploaded Files:
<ul id="uploadResult"></ul>
<!--#endregion -->

<input id="FileInput" type="file" />  <br />
<!-- <video width="400" height="222" controls="controls"></video> <br /> <br /> -->

<form name="ConversionForm" method="post">

    <label for="InputFilePathAndName">Chemin et nom de la vidéo à convertir:</label>
    <input type="text" name="InputFilePathAndName" value="" />
    <label for="OutputFilePathAndName">Chemin et nom de la vidéo de sortie:</label>
    <input type="text" name="OutputFilePathAndName" value="" />
    </br> </br>
    <label>
        Cadence Image
        <input type="range" id="cadenceImage" value="15" max="300" min="1" step="1">
    </label> </br> </br>

    <label>
        Definition Image
        <select id="defImage" class="test">
            </br>
            <option value="0">UHD - 3840*2160</option>
            <option value="1" selected>HD - 1920*1080</option>
            <option value="2">HD - 1440*1080</option>
            <option value="3">1270*720</option>
            <option value="4">Proxy - 480p</option>
            <option value="5">Proxy - 360p</option>
            <option value="6">Proxy - 240p</option>
            <option value="7">Proxy - 144p</option>
        </select>
    </label> </br> </br>

    <label>
        Taille CTU
        <select id="selectCTU" class="test">
            </br>
            <option value="0">64*64</option>
            <option value="1" selected>32*32</option>
            <option value="2">16*16</option>
            <option value="3">8*8</option>
        </select>
    </label> </br> </br>

    <label>
        Conteneur
        <select id="selectConteneur">
            </br>
            <option value="0">.mov</option>
            <option value="1" selected>.mxf</option>
            <option value="2">.mp4</option>
        </select>
    </label> </br> </br>

    <label>
        Video Codec
        <select id="selectVideoCodec">
            </br>
            <option value="0">HEVC</option>
            <option value="1" selected>h264</option>
            <option value="2">Mpeg2</option>
            <option value="3">vp9</option>
        </select>
    </label> </br> </br>

    <label>
        Debit Video
        <input type="range" id="debitVideo" value="15" max="300" min="1" step="1">
        <script type="text/javascript">
            $(function () {
                $('.range').next().text('--'); // Valeur par défaut
                $('.range').on('input', function () {
                    var $set = $(this).val();
                    $(this).next().text($set);
                });
            });
        </script>
    </label> </br> </br>

    <label>
        Taille GOP
        <input type="range" id="tailleGop" value="15" max="300" min="1" step="1">
    </label> </br> </br>

    <label>
        Wpp
        <input type="checkbox" id="Wppcbox" value="Wpp"> </br>
    </label> </br>

    <label>
        Qp
        <input type="checkbox" id="QPcbox" value="Qp"> </br>
    </label> </br>

    <label>
        Performance Option
        <select id="perfOption">
            </br>
            <option value="0">ultrafast</option>
            <option value="1">superfast</option>
            <option value="2">veryfast</option>
            <option value="3">faster</option>
            <option value="4">fast</option>
            <option value="5" selected>medium</option>
            <option value="6">slow</option>
            <option value="7">slower</option>
            <option value="8">veryslow</option>
            <option value="9">placebo</option>

        </select>
    </label> </br> </br>

    <label>
        Audio Codec
        <select id="selectAudioCodec">
            </br>
            <option value="0">mp3</option>
            <option value="1" selected>wmv</option>
            <option value="2">pcm</option>
            <option value="3">aac</option>
        </select>
    </label> </br> </br>

    <label>
        Debit Audio
        <input type="range" id="debitAudio" value="15" max="300" min="1" step="1">
    </label> </br> </br>


    <input type="submit" name="BeginConversionButton" value="BeginConversion"> </br>
    @*<p><button type="button" onclick="DoSomething" class="btn btn-primary btn-lg">Begin Conversion &raquo;</button></p>
        </div>*@
</form>


@{
    if (IsPost)
    {

        bool _isWpp = Request.Form["Wppcbox"].AsBool();
        string _InputFilePathAndName = Request.Form["InputFilePathAndName"];
        string _InputFileName = "";
        string _InputFilepath = "";
        //if (string.IsNullOrEmpty(_InputFilePathAndName))
        //{ ffmpeg -i G:\Documents\Visual\\WatchFolder\Vikings_S01E01_VOSTFR_HDTV_XviD.avi -r 1 G:\Documents\Visual\WatchFolder\Test.avi
        int index = _InputFilePathAndName.LastIndexOf(@"\");
        //if (index == 0)
        //  throw new Exception;
        _InputFileName = x265Com.ScriptCS.Tools.GetFileName(_InputFilePathAndName, index);
        _InputFilepath = x265Com.ScriptCS.Tools.GetFilePath(_InputFilePathAndName, index);
        //_InputFilepath = x265Com.ScriptCS.Tools.StripPathOfDoubleSlashes(_InputFilepath);
        string _OutputFilePathAndName = Request.Form["OutputFilePathAndName"];
        string _OutputFileName = "";
        string _OutputFilepath = "";
        //if (string.IsNullOrEmpty(_InputFilePathAndName))
        //{
        index = _OutputFilePathAndName.LastIndexOf(@"\");
        //if (index == 0)
        //  throw new Exception;
        _OutputFileName = x265Com.ScriptCS.Tools.GetFileName(_OutputFilePathAndName, index);
        _OutputFilepath = x265Com.ScriptCS.Tools.GetFilePath(_OutputFilePathAndName, index);
        //_OutputFilepath = x265Com.ScriptCS.Tools.StripPathOfDoubleSlashes(_OutputFilepath);
        //}
        int _cadenceImage = Request.Form["cadenceImage"].AsInt();
        int _defImage = Request.Form["defImage"].AsInt();
        x265Com.ScriptCS.ConversionInfo _ConversionInfo = new x265Com.ScriptCS.ConversionInfo()
        {
            InFilePath = _InputFilepath,
            InFileName = _InputFileName,
            OutFilePath = _OutputFilepath,
            OutFileName = _OutputFileName,
            cadenceImage = _cadenceImage,
            DefImage = _defImage,
            isWpp = _isWpp
        };
        bool isSuccess = _ConversionInfo.StartConversion();
        if (isSuccess)
        {
            <text>
                OK
            </text>
        }
        else
        {
            <text>
                KO
            </text>
        }
    }
}

