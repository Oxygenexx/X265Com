@model x265Com.Models.ConversionModel

<div id="divConversion">
    @using (Ajax.BeginForm("_ConversionPartial", "Home", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divConversion" }))
    {
        @Html.AntiForgeryToken()
        // <form name="ConversionForm" method="post">
        

<p class="ligne">
    <label for="InputFilePathAndName" class="ligne">Chemin et nom de la vidéo à convertir:</label>
    <input type="text" name="InputFilePathAndName" value="@(Model != null ? Model.InputFilePathAndName : "")" class="ligne" />
    <label for="OutputFilePathAndName" class="ligne">Chemin et nom de la vidéo de sortie:</label>
    <input type="text" name="OutputFilePathAndName" value="@(Model != null ? Model.OutputFilePathAndName : "")" class="ligne" /> <br />
</p>
    <h3>Vidéo</h3> <br />

    <p class="colonne1">
        <label>
            Definition Image
        </label>
            <input type="text" list="defImage" />
            <datalist name="defImage" id="defImage" class="defImage, test, margin">
                <option value="0" @(Model != null && Model.DefImage == 0 ? "selected" : "")>UHD - 3840*2160</option>
                <option value="1" @(Model != null && Model.DefImage == 1 ? "selected" : "")>HD - 1920*1080</option>
                <option value="2" @(Model != null && Model.DefImage == 2 ? "selected" : "")>HD - 1440*1080</option>
                <option value="3" @(Model != null && Model.DefImage == 3 ? "selected" : "")>1270*720</option>
                <option value="4" @(Model != null && Model.DefImage == 4 ? "selected" : "")>Proxy - 480p</option>
                <option value="5" @(Model != null && Model.DefImage == 5 ? "selected" : "")>Proxy - 360p</option>
                <option value="6" @(Model != null && Model.DefImage == 6 ? "selected" : "")>Proxy - 240p</option>
                <option value="7" @(Model != null && Model.DefImage == 7 ? "selected" : "")>Proxy - 144p</option>
            </datalist> 

        <label>
            Cadence Image
        </label>
            <input type="range" class="range, margin" name="cadenceImage" id="cadenceImage" value="@(Model != null ? Model.cadenceImage : 0) " max="300" min="1" step="1" oninput="result4.value=parseInt(d.value)">
            <output name="result4"></output>
            <script type="text/javascript" src="~/Scripts/ValeurCurseur.js"></script>
        <br />
    
        <label>
            Video Codec
        </label>
            <select name="VideoCodec" id="selectVideoCodec" class="select">
                <option value="0">HEVC</option>
                <option value="1" selected>h264</option>
                <option value="2">Mpeg2</option>
                <option value="3">vp9</option>
            </select>
        

        <label>
            Conteneur
        </label>
            <select name="Conteneur" id="selectConteneur" class="select">
                <option value="0">.mov</option>
                <option value="1" selected>.mxf</option>
                <option value="2">.mp4</option>
            </select>
        

        
        <label>
            Debit Video
        </label>
            <input type="text" class="text, margin" name="debitVideo" id="debitVideo" oninput="result4.value=parseInt(d.value)">
            <output name="result4"></output>
        <br />
    </p>
    <h3>Audio</h3> <br />
    <p class="colonne1">
        <label>
            Audio Codec
        </label>
            <select name="sAudioCodec" id="selectAudioCodec" class="select">
                <option value="0">mp3</option>
                <option value="1" selected>wmv</option>
                <option value="2">pcm</option>
                <option value="3">aac</option>
            </select>
         <br />

        <label>
            Debit Audio
        </label>
            <input type="text" class="text, margin" name="debitAudio" id="debitAudio" oninput="result4.value=parseInt(d.value)">
            <output name="result4"></output>
    </p>
    <h3>Paramètre de l'encodeur</h3> <br />
    <p class="colonne1">
        <label>
            Performance Option
        </label>
            <select id="perfOption" name="perfOption" class="select">
                <option value="0" @(Model != null && Model.perfOption == 0 ? "selected" : "")>ultrafast</option>
                <option value="1" @(Model != null && Model.perfOption == 1 ? "selected" : "")>superfast</option>
                <option value="2" @(Model != null && Model.perfOption == 2 ? "selected" : "")>veryfast</option>
                <option value="3" @(Model != null && Model.perfOption == 3 ? "selected" : "")>faster</option>
                <option value="4" @(Model != null && Model.perfOption == 4 ? "selected" : "")>fast</option>
                <option value="5" @(Model != null && Model.perfOption == 5 ? "selected" : "")>medium</option>
                <option value="6" @(Model != null && Model.perfOption == 6 ? "selected" : "")>slow</option>
                <option value="7" @(Model != null && Model.perfOption == 7 ? "selected" : "")>slower</option>
                <option value="8" @(Model != null && Model.perfOption == 8 ? "selected" : "")>veryslow</option>
                <option value="9" @(Model != null && Model.perfOption == 9 ? "selected" : "")>placebo</option>
            </select>
        <br />

        <label>
            Taille GOP
        </label>
            <input type="text" list="tailleGop"/>
            <datalist class="margin, bottom" name="tailleGop" id="tailleGop">
                <option value="0">1 image</option>
                <option value="1">12 images</option>
                <option value="2">15 images</option>
            </datalist>
        <br />

        <label>
            Taille CTU
        </label>
            <select name="CTU" id="selectCTU" class="margin, select">
                <option value="0">64*64 pixels</option>
                <option value="1" selected>32*32 pixels</option>
                <option value="2">16*16 pixels</option>
                <option value="3">8*8 pixels</option>
            </select> 
         <br />
        <label>
            Enable Wpp
        </label>
            <input type="checkbox" name="isWpp" id="Wppcbox" value="Wpp" class="margin">
      
        <label>
            Enable Qp
        </label>
            <input type="checkbox" name="isQP" id="QPcbox" value="Qp" class="margin">
         <br />
       </p>

     <input type="submit" name="BeginConversionButton" value="BeginConversion" class="button, margin">
        @*<p><button type="button" onclick="DoSomething" class="btn btn-primary btn-lg">Begin Conversion &raquo;</button></p>
            </div>*@

        }
</div>
@{
    if (Model.isOver)
    {
        if (Model.isSuccess)
        {
            <text> Conversion OK Time Elapsed : @Model.Elapsed.Hours:@Model.Elapsed.Minutes:@Model.Elapsed.Seconds </text> if (!string.IsNullOrEmpty(Model.CMDconsoleMessage)) {<text> Message : @Model.CMDconsoleMessage </text>} <text> Exit Code : @Model.ExitCode </text>
        }
        else
        {
            <text> Conversion KO  </text>if (!string.IsNullOrEmpty(Model.CMDconsoleMessage)) {<text> Message : @Model.CMDconsoleMessage </text>} <text> Exit Code: </text>@Model.ExitCode
        }
    }
}
